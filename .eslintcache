[{"F:\\pokemon\\src\\index.js":"1","F:\\pokemon\\src\\reportWebVitals.js":"2","F:\\pokemon\\src\\App.js":"3","F:\\pokemon\\src\\Pokemon.js":"4"},{"size":485,"mtime":1608597342737,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":8213,"mtime":1608862988437,"results":"8","hashOfConfig":"6"},{"size":214,"mtime":1608708602540,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"mcjdes",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"F:\\pokemon\\src\\index.js",[],["21","22"],"F:\\pokemon\\src\\reportWebVitals.js",[],"F:\\pokemon\\src\\App.js",["23","24","25"],"import React, { useState, useEffect, useRef } from 'react';\nimport { getData } from './Pokemon';\nimport {BrowserRouter, Switch, Route, Link} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  const [Pokemon, setPokemon] = useState( [] );\n  const [NextList, setNextList] = useState( '' );\n  const [PrevList, setPrevList] = useState( '' );\n  const [Loading, setLoading] = useState(true);\n  const Url = 'https://pokeapi.co/api/v2/pokemon';\n  const [PokemonName, setPokemonName] = useState( '' );\n  const PokNickname = useRef ( null );\n  const [MyPokemon, setMyPokemon] = useState ( [{name: '', nickname: ''}] );\n  const [PokemonDetail, setPokemonDetail] = useState( [{name: '', nickname: '', img: '', abilities: [], moves: [], height: '', weight: '', types: []}] );\n  const [ShowForm, setShowForm] = useState(false);\n  \n  useEffect(() => {\n    const dataPokemonName = localStorage.getItem('pokemon-name');\n    const dataPokemonDetail = localStorage.getItem('pokemon-detail');\n    const dataMyPokemon = localStorage.getItem('my-pokemon-data');\n\n    if(dataPokemonName){\n      setPokemonName(dataPokemonName);\n    }\n    if(dataPokemonDetail){\n      setPokemonDetail(JSON.parse(dataPokemonDetail));\n    }\n    if(dataMyPokemon){\n      setMyPokemon(JSON.parse(dataMyPokemon));\n    }\n  }, [] );\n\n  useEffect(() => {\n    localStorage.setItem('pokemon-detail', JSON.stringify(PokemonDetail));\n    localStorage.setItem('my-pokemon-data', JSON.stringify(MyPokemon));\n    localStorage.setItem('pokemon-name', PokemonName);\n  } );\n\n  useEffect(() =>  {\n    async function fetchData() {\n      let data = await getData(Url);\n      setNextList(data.next);\n      setPrevList(data.previous);\n      setPokemon(data.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, [] );\n  \n  useEffect(() => {\n    if(PokemonName !== ''){\n      let name = PokemonName.split(';');\n      let data = getData(Url+'/'+name[0]);\n      \n      data.then(val => \n        setPokemonDetail({\n          name: name[0],\n          nickname: name[1],\n          img: val.sprites.front_shiny,\n          abilities: val.abilities,\n          moves: val.moves,\n          height: val.height,\n          weight: val.weight,\n          types: val.types\n        })\n      )\n    }\n  }, [PokemonName]);\n\n  const next = async () => {\n    if(!NextList) return;\n    let data = await getData(NextList);\n    setPokemon(data.results);\n    setNextList(data.next);\n    setPrevList(data.previous);\n  }\n\n  const prev = async () => {\n    if(!PrevList) return;\n    let data = await getData(PrevList);\n    setPokemon(data.results);\n    setNextList(data.next);\n    setPrevList(data.previous);\n  }\n\n  function catchPokemon() {\n    var catchPok = Boolean(Math.round(0 + Math.random() * (1 - 0)));\n    setShowForm(catchPok);\n    return(\n      <>\n      { catchPok ? alert('Catch pokemon SUCCESS') : alert('Catch pokemon FAILED')} \n      </>\n    )  \n  }\n\n  const addMyPokemon = () => {\n    let cek = MyPokemon.filter(val => val.nickname === PokNickname.current.value).length;\n    \n    if(cek === 0){\n      setShowForm(false);\n      setMyPokemon([ ... MyPokemon, {\n        name: PokemonDetail.name,\n        nickname: PokNickname.current.value\n      }])\n      PokNickname.current.value = '';\n      alert('The pokemon is added!');\n    }else{\n      setShowForm(true);\n      alert('Nickname is already exist!');\n    }\n\n  }\n\n  const releasePokemon = (data) => {\n    let newData  = MyPokemon.filter(val => { return val.nickname != data.nickname});\n    setMyPokemon(newData);    \n  }\n\n  //POKEMON PAGE\n  function pokemonPage() {\n    return(\n      <div className=\"row\">\n        <label><h1>Pokemon List</h1></label>\n        <div className='btn-group'>\n          {PrevList ? (<button onClick={prev}>Prev</button>) : (<></>) }\n          {NextList ? (<button onClick={next}>Next</button>) : (<></>) }\n        </div>\n        <table className=\"tbl\">\n          <thead>\n              <tr>\n                <th>Name</th>\n                <th>Total Owned</th>\n                <th>Action</th>\n              </tr>\n          </thead>\n            {Pokemon.map((pok, i) =>\n              <tr key={pok.name}>\n                <td>{pok.name}</td>\n                <td>{MyPokemon.filter(val => val.name === pok.name).length}</td>\n                <td><Link to={'/pokemon/'+pok.name+';'}>Detail</Link></td>\n              </tr>\n            )}\n        </table>\n      </div>\n    );\n  }\n\n  //POKEMON DETAIL PAGE\n  function showDetail( {match} ) {\n    setPokemonName(match.params.name);\n    return(\n      <>\n      { Loading ? <h1>LOADING...</h1> :(\n        <>\n        {ShowForm ? (\n          <>\n          <h1>Give The Pokemon Nickname</h1>\n          <form onSubmit={addMyPokemon}>\n            <label>Pokemon Nickname: </label>\n            <input name=\"nickname\" type=\"text\" ref={PokNickname} required/><br/>\n            \n            <button type='submit' className=\"btn-submit\">Add</button>\n          </form>\n          </>\n        ) : null}\n\n        <label><h1>Pokemon Detail</h1></label>\n        <div className='detailBox'>\n          <div className='imageBox'>\n            <img src={PokemonDetail.img} />\n          </div>\n          <table>\n          {PokemonDetail.nickname !== '' ? (\n            <tr>\n              <td>Nickname</td>\n              <td>:</td>\n              <td>{PokemonDetail.nickname}</td>\n            </tr>\n          ):(<></>)}\n            <tr>\n              <td>Name</td>\n              <td>:</td>\n              <td>{PokemonDetail.name}</td>\n            </tr>\n            <tr>\n              <td>Move</td>\n              <td>:</td>\n              <td>\n                <ul>\n                  {PokemonDetail.moves.map(val=><li>{val.move.name}</li>)}\n                </ul>\n              </td>\n            </tr>\n            <tr>\n              <td>Abilities</td>\n              <td>:</td>\n              <td>\n                <ul>\n                  {PokemonDetail.abilities.map(val=><li>{val.ability.name}</li>)}\n                </ul>\n              </td>\n            </tr>\n            <tr>\n              <td>Type</td>\n              <td>:</td>\n              <td>\n                <ul>\n                  {PokemonDetail.types.map(val=><li>{val.type.name}</li>)}\n                </ul>\n              </td>\n            </tr>\n            <tr>\n              <td>Weight</td>\n              <td>:</td>\n              <td>{PokemonDetail.weight}</td>\n            </tr>\n            <tr>\n              <td>Height</td>\n              <td>:</td>\n              <td>{PokemonDetail.height}</td>\n            </tr>\n          </table>\n          {PokemonDetail.nickname === '' ? (\n            <button onClick={catchPokemon}>Catch the Pokemon</button>\n          ):(<></>)}          \n        </div>\n        </>\n      )}        \n      </>  \n    );\n  }\n\n  //MY POKEMON PAGE\n  function myPokemonPage() {\n    return(\n      <>\n      <div className=\"row\">\n        <label><h1>My Pokemon List</h1></label>\n        <table className=\"tbl\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Nickname</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {MyPokemon.map(pok => \n              <tr key={pok.id}>\n                <td>{pok.name}</td>\n                <td>{pok.nickname}</td>\n                <td>\n                  <Link to={'/pokemon/'+pok.name+';'+pok.nickname}>Detail</Link>\n                  <Link to={'/mypokemon'} className='btn-remove' onClick={releasePokemon.bind(this, pok)} >Release</Link>\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      </>\n    );\n  }\n\n  return (\n    <BrowserRouter>\n    { Loading ? <h1>LOADING...</h1> :(\n      <div>\n        {/* Navigation Bar */}\n        <nav>\n          <ul>\n            <li><Link to='/'>Pokemon</Link></li>\n            <li><Link to='/mypokemon'>My Pokemon</Link></li>\n          </ul>\n        </nav>\n\n        <main>\n          <Switch>\n            <Route path='/' exact component={pokemonPage} />\n            <Route path='/pokemon/:name' exact component={showDetail} />\n            <Route path='/mypokemon' exact component={myPokemonPage} />\n          </Switch>\n        </main>\n      </div>\n    )}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","F:\\pokemon\\src\\Pokemon.js",[],["26","27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":102,"column":25,"nodeType":"34","messageId":"35","endLine":102,"endColumn":26,"fix":"36"},{"ruleId":"37","severity":1,"message":"38","line":116,"column":66,"nodeType":"39","messageId":"40","endLine":116,"endColumn":68},{"ruleId":"41","severity":1,"message":"42","line":171,"column":13,"nodeType":"43","endLine":171,"endColumn":44},{"ruleId":"28","replacedBy":"44"},{"ruleId":"30","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"48","text":"49"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["46"],["47"],"no-global-assign","no-unsafe-negation",[3089,3090],""]